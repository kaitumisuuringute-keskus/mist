version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging into ECR
      - aws --version
      - eval $(aws ecr get-login --region $AWS_REGION --no-include-email)
      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started at `date`
      - echo Building the Docker image...
      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME
      - docker pull $REPO_URI:latest || true
      - docker run hello-world
      - sbt -DscalaVersion=2.12.7 -DsparkVersion=3.0.1 docker
      - echo sbt build succeeded
      - docker tag kaitumisuuringutekeskus/mist:1.1.3-3.0.1-scala-2.12-hadoop3.2 $REPO_URI:latest
      - docker tag kaitumisuuringutekeskus/mist:1.1.3-3.0.1-scala-2.12-hadoop3.2 $REPO_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME
      - docker push $REPO_URI:latest
      - docker push $REPO_URI:$IMAGE_TAG
      - echo Writing image definitions...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$TASK_NAME" "$REPO_URI:$IMAGE_TAG" | tee imagedefinitions.json
artifacts:
  files: imagedefinitions.json
